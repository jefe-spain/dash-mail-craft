{
    "name": "Pedidos THT RAG Local Store",
    "nodes": [
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "dev-pedido",
          "responseMode": "lastNode",
          "options": {}
        },
        "name": "Webhook Dev",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [250, 200]
      },
      {
        "parameters": {
          "functionCode": "const input = $input.first().json;\nlet output = { json: { sender: input.sender, body: input.body }, binary: {} };\n\n// Guardar remitente en memoria\n$workflow.setValue('sender', input.sender);\n\n// Procesar adjunto base64 si existe\nif (input.attachment) {\n  output.binary = { attachment: { data: Buffer.from(input.attachment, 'base64'), mimeType: 'application/pdf' } };\n}\n\nreturn [output];"
        },
        "name": "Normalizar Webhook",
        "type": "n8n-nodes-base.function",
        "typeVersion": 1,
        "position": [450, 200]
      },
      {
        "parameters": {
          "authentication": "imap",
          "imap": {
            "host": "imap.puertastht.com",
            "port": 993,
            "ssl": true,
            "email": "pedidos@puertastht.com",
            "allowUnauthorizedCerts": false
          },
          "folder": "INBOX",
          "interval": 60,
          "downloadAttachments": true,
          "markAsRead": true
        },
        "name": "Email Trigger",
        "type": "n8n-nodes-base.emailReadImap",
        "typeVersion": 1,
        "position": [250, 400],
        "credentials": {
          "imap": {
            "id": "Puertas THT IMAP",
            "name": "Puertas THT IMAP"
          }
        }
      },
      {
        "parameters": {
          "functionCode": "const input = $input.first().json;\nlet output = { json: { sender: input.from, body: input.text }, binary: {} };\n\n// Guardar remitente en memoria\n$workflow.setValue('sender', input.from);\n\n// Procesar adjunto si existe\nif (input.attachments && input.attachments.length > 0) {\n  output.binary = { attachment: input.attachments[0] };\n}\n\nreturn [output];"
        },
        "name": "Normalizar Email",
        "type": "n8n-nodes-base.function",
        "typeVersion": 1,
        "position": [450, 400]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api-inference.huggingface.co/models/sentence-transformers/all-MiniLM-L6-v2",
          "headers": {
            "Authorization": "Bearer {{ $secrets.hf_token }}",
            "Content-Type": "application/json"
          },
          "body": {
            "inputs": "{{ $node['Normalizar Webhook'].json['body'] || $node['Normalizar Email'].json['body'] }}"
          },
          "responseFormat": "json"
        },
        "name": "Generar Embeddings",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [650, 300]
      },
      {
        "parameters": {
          "mode": "retrieve-as-tool",
          "toolName": "knowledge_base",
          "toolDescription": "Consulta el catálogo de Puertas THT para validar series y modelos.",
          "memoryKey": "vector_store_key"
        },
        "name": "Query Data Tool",
        "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
        "typeVersion": 1.2,
        "position": [850, 300]
      },
      {
        "parameters": {
          "agent": "toolsAgent",
          "promptSource": "manual",
          "systemPrompt": "Eres un agente de validación de pedidos para Puertas THT. Tu tarea es:\n1. Extraer datos del cuerpo del mensaje o PDF adjunto.\n2. Usar la herramienta knowledge_base para validar contra el catálogo.\n3. Rellenar la plantilla: CLIENTE(NOMBRE,DIRECCION,OBSERVACION), PUERTAS(CANTIDAD,SERIE,MODELO,ANCHO,ALTO,EXT,INT,PUNTOS,CARAS,MANO,ZANCO,PREMARCO,TIPO,PORTERO,RETENEDOR,ACCESORIOS).\n4. Si válido, generar JSON: { plantilla: {rows: [{col1: val1, ...}]}, datos_faltantes: [], status: 'valid' }.\n5. Si inválido, listar datos_faltantes: { plantilla: {}, datos_faltantes: ['campo1', 'campo2'], status: 'invalid' }.\nCuerpo: {{ $input.first().json.body }}.\nPDF: {{ $input.first().binary.attachment ? 'procesar PDF' : 'sin PDF' }}.\nRemitente: {{ $workflow.getValue('sender') }}.",
          "chatModel": {
            "type": "googleGeminiChatModel",
            "model": "google/gemini-flash-1.5",
            "credentials": {
              "openRouterApi": {
                "id": "OpenRouter Credentials",
                "name": "OpenRouter Credentials"
              }
            }
          },
          "memory": {
            "type": "simpleMemory"
          },
          "tools": [
            {
              "toolType": "vectorStoreInMemory",
              "toolName": "knowledge_base",
              "toolNode": "Query Data Tool"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": [
                {
                  "type": "text",
                  "text": "Extrae y valida datos del pedido/presupuesto. Cuerpo: {{ $input.first().json.body }}. Usa knowledge_base para validar catálogo. Plantilla: CLIENTE(NOMBRE,DIRECCION,OBSERVACION), PUERTAS(CANTIDAD,SERIE,MODELO,ANCHO,ALTO,EXT,INT,PUNTOS,CARAS,MANO,...). Output JSON: { plantilla, datos_faltantes, status }."
                },
                {
                  "type": "file",
                  "file": {
                    "filename": "pedido.pdf",
                    "file_data": "{{ $input.first().binary.attachment ? 'data:application/pdf;base64,' + $input.first().binary.attachment.data : '' }}"
                  }
                }
              ]
            }
          ],
          "plugins": [
            {
              "id": "file-parser",
              "pdf": {
                "engine": "mistral-ocr"
              }
            }
          ]
        },
        "name": "AI Agent RAG",
        "type": "n8n-nodes-base.aiAgent",
        "typeVersion": 1,
        "position": [1050, 300]
      }
    ],
    "connections": {
      "Webhook Dev": {
        "main": [
          [
            {
              "node": "Normalizar Webhook",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Email Trigger": {
        "main": [
          [
            {
              "node": "Normalizar Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Normalizar Webhook": {
        "main": [
          [
            {
              "node": "Generar Embeddings",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Normalizar Email": {
        "main": [
          [
            {
              "node": "Generar Embeddings",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Generar Embeddings": {
        "main": [
          [
            {
              "node": "Query Data Tool",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Query Data Tool": {
        "ai_tool": [
          [
            {
              "node": "AI Agent RAG",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "saveData": true,
      "timezone": "Europe/Madrid"
    }
  }